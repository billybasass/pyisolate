name: PyTorch Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test-pytorch-cpu:
    name: Test with PyTorch CPU
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.11']
        pytorch-version: ['2.0.0', '2.1.0', '2.2.0', '2.3.0']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install torch==${{ matrix.pytorch-version }} --index-url https://download.pytorch.org/whl/cpu
        uv pip install -e ".[dev,test]"

    - name: Run tests
      run: |
        source .venv/bin/activate
        pytest tests/test_integration.py -v -k "torch"

    - name: Test example with PyTorch
      run: |
        source .venv/bin/activate
        cd example
        python main.py -v

  test-pytorch-cuda:
    name: Test with PyTorch CUDA
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - pytorch-version: '2.1.0'
            cuda-version: '11.8'
          - pytorch-version: '2.2.0'
            cuda-version: '11.8'
          - pytorch-version: '2.3.0'
            cuda-version: '12.1'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install NVIDIA GPU drivers
      run: |
        # Note: GitHub Actions doesn't have GPU support, but we can still test CUDA builds
        # The tests will run on CPU but with CUDA-enabled PyTorch builds
        sudo apt-get update
        sudo apt-get install -y nvidia-cuda-toolkit

    - name: Install PyTorch with CUDA
      run: |
        uv venv
        source .venv/bin/activate
        if [ "${{ matrix.cuda-version }}" = "11.8" ]; then
          uv pip install torch==${{ matrix.pytorch-version }} --index-url https://download.pytorch.org/whl/cu118
        elif [ "${{ matrix.cuda-version }}" = "12.1" ]; then
          uv pip install torch==${{ matrix.pytorch-version }} --index-url https://download.pytorch.org/whl/cu121
        fi
        uv pip install -e ".[dev,test]"

    - name: Check PyTorch CUDA availability
      run: |
        source .venv/bin/activate
        python -c "import torch; print(f'PyTorch version: {torch.__version__}'); print(f'CUDA available: {torch.cuda.is_available()}'); print(f'CUDA version: {torch.version.cuda if torch.version.cuda else \"N/A\"}')"

    - name: Run tests
      run: |
        source .venv/bin/activate
        pytest tests/test_integration.py -v -k "torch"

    - name: Test example with PyTorch
      run: |
        source .venv/bin/activate
        cd example
        python main.py -v
