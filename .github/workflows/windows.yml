name: Windows Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test-windows:
    name: Test on Windows - Python ${{ matrix.python-version }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv venv
        .venv\Scripts\activate
        uv pip install -e ".[dev,test]"

    - name: Run tests
      run: |
        .venv\Scripts\activate
        pytest -v

    - name: Test example
      run: |
        .venv\Scripts\activate
        cd example
        python main.py -v

  test-windows-pytorch:
    name: Test on Windows with PyTorch
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        pytorch-version: ['2.1.0', '2.3.0']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install PyTorch and dependencies
      run: |
        uv venv
        .venv\Scripts\activate
        uv pip install torch==${{ matrix.pytorch-version }} --index-url https://download.pytorch.org/whl/cpu
        uv pip install -e ".[dev,test]"

    - name: Check PyTorch
      run: |
        .venv\Scripts\activate
        python -c "import torch; print(f'PyTorch version: {torch.__version__}')"

    - name: Run PyTorch tests
      run: |
        .venv\Scripts\activate
        python tests/test_integration.py -v
        python tests/test_edge_cases.py -v
        python tests/test_normalization_integration.py -v
        python tests/test_security.py -v
        python tests/test_torch_tensor_integration.py -v
